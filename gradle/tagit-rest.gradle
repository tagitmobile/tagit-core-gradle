apply plugin: "war"
apply plugin: 'org.springframework.boot'
//apply plugin: 'io.spring.dependency-management' // [rj.commented 2021.10.07] Use Gradle's BOM support instead from tagit-core-rest

configurations.all {
	exclude module: 'spring-boot-starter-logging' // to replace with log4j2 and fix the exception Exception in thread "main" java.lang.StackOverflowError at org.apache.logging.log4j.util.StackLocator.getCallerClass(StackLocator.java:112)
}

def getDate() {
    return new Date().format('yyyyMMddHHmmss')
}

// By default, when the bootJar or bootWar tasks are configured, the jar or war tasks are disabled. A project can be configured to build both an executable archive and a normal archive at the same time by enabling the jar or war task:
jar {
	enabled = true
	classifier = 'lib'
}

// To avoid the executable archive and the normal archive from being written to the same location, one or the other should be configured to use a different location. One way to do so is by configuring a classifier:
bootJar {
	enabled = true
	classifier = 'boot'
	
	// [rj.commented 2021.10.18] Conflicts with bootBuildImage: not compatible with buildpacks; ensure jar file is valid and launch script is not enabled
// 	launchScript() // Spring Boot provides support for fully executable archives. An archive is made fully executable by prepending a shell script that knows how to launch the application. On Unix-like platforms, this launch script allows the archive to be run directly like any other executable or to be installed as a service.
	
	from('src/main/webapp') {
        into '/public'
    }

    manifest {
		attributes("Specification-Title": "${projectName}")
		attributes("Specification-Version": archiveVersion) // [rj.updated 2020.06.01] gradle 6.4.1 support instead of version
		attributes("Specification-Vendor": "Tagit Pte Ltd")        
		attributes("Build-Date": getDate())		
    }    	
}

bootWar {
	enabled = true
	includes = ["WEB-INF/**", "META-INF/**"]
    manifest {
		attributes("Specification-Title": "${projectName}")
		attributes("Specification-Version": archiveVersion) // [rj.updated 2020.06.01] gradle 6.4.1 support instead of version
		attributes("Specification-Vendor": "Tagit Pte Ltd")        
		attributes("Build-Date": getDate())		
    }
}

task copyWar(type: Copy) {
	dependsOn copyJar, bootWar
    from war, bootJar, bootWar
    into "deploy"
}

// [rj.added 2020.06.01] common dependencies for TagitCore Rest applications
dependencies {

    // ### Unit Testing ###
	testImplementation("com.tagit.commons:tagit-core-test:${tagitCoreVersion}")
	testImplementation("com.tagit.commons:tagit-core-test:${tagitCoreVersion}") {
		capabilities {
	    	requireCapability("com.tagit.commons:tagit-core-test-boot")
        }
	}
	testRuntimeOnly("com.tagit.commons:tagit-core-test:${tagitCoreVersion}") {
		capabilities {
	    	requireCapability("com.tagit.commons:tagit-core-test-runtime")
        }
	}
	
	// ### Runtime Standalone ###
	compileOnly "javax.servlet:javax.servlet-api" // instead of tomcat, this allows seamless deployment to J2EE containers
	providedRuntime "org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}"

	// --------------------------------------------------
	// DB CONNECTIVITY
	// --------------------------------------------------
	providedRuntime("com.tagit.commons:tagit-core-db:${tagitCoreVersion}")
	
}

defaultTasks 'clean', 'eclipse', 'build', 'bootJar', 'copyWar', 'htmlDependencyReport', 'copyDependencies'