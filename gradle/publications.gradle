apply plugin: "maven-publish"

// [rj.added 2023.10.30] force publishing of enforced platform WARs
tasks.withType(GenerateModuleMetadata).configureEach {
    suppressedValidationErrors.add('enforced-platform')
}

println "Note: In order to publish bootWar artifacts, please ensure `publications.gradle` is applied first before `tagit-rest.gradle`"

publishing {
	publications {
        mavenJava(MavenPublication) {
            from components.java
     		artifact sourcesJar
			artifact javadocJar
        }
    }
    repositories {
        maven {
        	// [rj.added 2020.06.04] local nexus repository for offline work
        	if (null != System.properties['local']) {
	            def releasesRepoUrl = "http://localhost:8081/repository/maven-releases/"
	            def snapshotsRepoUrl = "http://localhost:8081/repository/maven-snapshots/"
	            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
	            credentials {
	                username 'gradle'
	                password 'Tagit123'
	            }
	            allowInsecureProtocol = true
	            println "Publish target will be local repository $url as $project.name:$version"
        	} else if (null != System.properties['partner']) {
	            def releasesRepoUrl = "https://partner-nexus.tagitmobile.com/repository/maven-releases/"
	            def snapshotsRepoUrl = "https://partner-nexus.tagitmobile.com/repository/maven-snapshots/"
	            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
				// please override with the proper credentials (see https://docs.gradle.org/current/samples/sample_publishing_credentials.html)
	            credentials(PasswordCredentials)
	            println "Publish target will be partner repository $url as $project.name:$version"
        	} else if (null != System.properties['qa']) {
	            def releasesRepoUrl = "https://nexus.tagitmobile.com/repository/maven-qa/"
	            def snapshotsRepoUrl = "https://nexus.tagitmobile.com/repository/maven-snapshots/"
	            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
	            credentials {
	                username 'gradle'
	                password 'Tagit123'
	            }
	            println "Publish target will be central repository $url as $project.name:$version"
        	} else {
	            def releasesRepoUrl = "https://nexus.tagitmobile.com/repository/maven-releases/"
	            def snapshotsRepoUrl = "https://nexus.tagitmobile.com/repository/maven-snapshots/"
	            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
	            credentials {
	                username 'gradle'
	                password 'Tagit123'
	            }
	            println "Publish target will be central repository $url as $project.name:$version"
	        }
        }
    }
}
